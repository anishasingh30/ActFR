{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOHIT JAIN\\\\Desktop\\\\Act Aware\\\\Frontend\\\\src\\\\components\\\\P5Background.js\",\n  _s = $RefreshSig$();\n// src/components/P5Background.js\nimport React, { useEffect, useRef } from \"react\";\nimport p5 from \"p5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst P5Background = () => {\n  _s();\n  const p5ContainerRef = useRef();\n  useEffect(() => {\n    const sketch = p => {\n      let spriteSheet;\n      let frameIndex = 0;\n      const totalFrames = 8; // Adjust to match your sprite sheet's frame count\n      const frameWidth = 200;\n      const frameHeight = 200;\n      const animationSpeed = 10; // Frames per second for the animation\n      let lastFrameChange = 0;\n      p.preload = () => {\n        // Adjust the image path as needed.\n        // If using the public folder, place your image at public/assets/handGestureSprite.png\n        spriteSheet = p.loadImage('../assets/ass');\n      };\n      p.setup = () => {\n        // Create a canvas that fills the window\n        p.createCanvas(p.windowWidth, p.windowHeight);\n        p.frameRate(30);\n      };\n      p.draw = () => {\n        p.clear(); // Clears the canvas to allow transparency\n        let currentTime = p.millis();\n        if (currentTime - lastFrameChange > 1000 / animationSpeed) {\n          frameIndex = (frameIndex + 1) % totalFrames;\n          lastFrameChange = currentTime;\n        }\n        let sx = frameIndex * frameWidth;\n        // Draw the sprite at a fixed position (you can adjust these values)\n        p.image(spriteSheet, 100, 100, frameWidth, frameHeight, sx, 0, frameWidth, frameHeight);\n      };\n      p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\n      };\n    };\n    const p5Instance = new p5(sketch, p5ContainerRef.current);\n    return () => {\n      p5Instance.remove(); // Clean up when the component unmounts\n    };\n  }, []);\n  return (\n    /*#__PURE__*/\n    // This div is positioned fixed with a negative z-index so it sits behind your content.\n    _jsxDEV(\"div\", {\n      ref: p5ContainerRef,\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(P5Background, \"i9h7EgwoXliWUzt1iS7/yBjk1FA=\");\n_c = P5Background;\nexport default P5Background;\nvar _c;\n$RefreshReg$(_c, \"P5Background\");","map":{"version":3,"names":["React","useEffect","useRef","p5","jsxDEV","_jsxDEV","P5Background","_s","p5ContainerRef","sketch","p","spriteSheet","frameIndex","totalFrames","frameWidth","frameHeight","animationSpeed","lastFrameChange","preload","loadImage","setup","createCanvas","windowWidth","windowHeight","frameRate","draw","clear","currentTime","millis","sx","image","windowResized","resizeCanvas","p5Instance","current","remove","ref","style","position","top","left","width","height","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MOHIT JAIN/Desktop/Act Aware/Frontend/src/components/P5Background.js"],"sourcesContent":["// src/components/P5Background.js\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport p5 from \"p5\";\r\n\r\nconst P5Background = () => {\r\n  const p5ContainerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const sketch = (p) => {\r\n      let spriteSheet;\r\n      let frameIndex = 0;\r\n      const totalFrames = 8; // Adjust to match your sprite sheet's frame count\r\n      const frameWidth = 200;\r\n      const frameHeight = 200;\r\n      const animationSpeed = 10; // Frames per second for the animation\r\n      let lastFrameChange = 0;\r\n\r\n      p.preload = () => {\r\n        // Adjust the image path as needed.\r\n        // If using the public folder, place your image at public/assets/handGestureSprite.png\r\n        spriteSheet = p.loadImage('../assets/ass');\r\n      };\r\n\r\n      p.setup = () => {\r\n        // Create a canvas that fills the window\r\n        p.createCanvas(p.windowWidth, p.windowHeight);\r\n        p.frameRate(30);\r\n      };\r\n\r\n      p.draw = () => {\r\n        p.clear(); // Clears the canvas to allow transparency\r\n        let currentTime = p.millis();\r\n        if (currentTime - lastFrameChange > 1000 / animationSpeed) {\r\n          frameIndex = (frameIndex + 1) % totalFrames;\r\n          lastFrameChange = currentTime;\r\n        }\r\n        let sx = frameIndex * frameWidth;\r\n        // Draw the sprite at a fixed position (you can adjust these values)\r\n        p.image(spriteSheet, 100, 100, frameWidth, frameHeight, sx, 0, frameWidth, frameHeight);\r\n      };\r\n\r\n      p.windowResized = () => {\r\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\r\n      };\r\n    };\r\n\r\n    const p5Instance = new p5(sketch, p5ContainerRef.current);\r\n    return () => {\r\n      p5Instance.remove(); // Clean up when the component unmounts\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    // This div is positioned fixed with a negative z-index so it sits behind your content.\r\n    <div \r\n      ref={p5ContainerRef} \r\n      style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        zIndex: -1,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default P5Background;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,cAAc,GAAGN,MAAM,CAAC,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAIC,CAAC,IAAK;MACpB,IAAIC,WAAW;MACf,IAAIC,UAAU,GAAG,CAAC;MAClB,MAAMC,WAAW,GAAG,CAAC,CAAC,CAAC;MACvB,MAAMC,UAAU,GAAG,GAAG;MACtB,MAAMC,WAAW,GAAG,GAAG;MACvB,MAAMC,cAAc,GAAG,EAAE,CAAC,CAAC;MAC3B,IAAIC,eAAe,GAAG,CAAC;MAEvBP,CAAC,CAACQ,OAAO,GAAG,MAAM;QAChB;QACA;QACAP,WAAW,GAAGD,CAAC,CAACS,SAAS,CAAC,eAAe,CAAC;MAC5C,CAAC;MAEDT,CAAC,CAACU,KAAK,GAAG,MAAM;QACd;QACAV,CAAC,CAACW,YAAY,CAACX,CAAC,CAACY,WAAW,EAAEZ,CAAC,CAACa,YAAY,CAAC;QAC7Cb,CAAC,CAACc,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC;MAEDd,CAAC,CAACe,IAAI,GAAG,MAAM;QACbf,CAAC,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC;QACX,IAAIC,WAAW,GAAGjB,CAAC,CAACkB,MAAM,CAAC,CAAC;QAC5B,IAAID,WAAW,GAAGV,eAAe,GAAG,IAAI,GAAGD,cAAc,EAAE;UACzDJ,UAAU,GAAG,CAACA,UAAU,GAAG,CAAC,IAAIC,WAAW;UAC3CI,eAAe,GAAGU,WAAW;QAC/B;QACA,IAAIE,EAAE,GAAGjB,UAAU,GAAGE,UAAU;QAChC;QACAJ,CAAC,CAACoB,KAAK,CAACnB,WAAW,EAAE,GAAG,EAAE,GAAG,EAAEG,UAAU,EAAEC,WAAW,EAAEc,EAAE,EAAE,CAAC,EAAEf,UAAU,EAAEC,WAAW,CAAC;MACzF,CAAC;MAEDL,CAAC,CAACqB,aAAa,GAAG,MAAM;QACtBrB,CAAC,CAACsB,YAAY,CAACtB,CAAC,CAACY,WAAW,EAAEZ,CAAC,CAACa,YAAY,CAAC;MAC/C,CAAC;IACH,CAAC;IAED,MAAMU,UAAU,GAAG,IAAI9B,EAAE,CAACM,MAAM,EAAED,cAAc,CAAC0B,OAAO,CAAC;IACzD,OAAO,MAAM;MACXD,UAAU,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACE;IACA9B,OAAA;MACE+B,GAAG,EAAE5B,cAAe;MACpB6B,KAAK,EAAE;QACLC,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE,CAAC;MACX;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEN,CAAC;AAACxC,EAAA,CA9DID,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AAgElB,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}