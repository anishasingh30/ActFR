{"ast":null,"code":"import{useContext}from\"react\";import{ThemeContext}from\"../../context/ThemeContext\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ThemeToggle=()=>{const{theme,toggleTheme}=useContext(ThemeContext);return/*#__PURE__*/_jsxs(\"button\",{onClick:toggleTheme,className:\"theme-toggle\",children:[theme===\"light\"?\"‚òÄÔ∏è\"// Light Mode\n:theme===\"dark\"?\"üåô\"// Dark Mode\n:theme===\"blue\"?\"üîµ\"// Blue Mode\n:theme===\"green\"?\"üü¢\"// Green Mode\n:theme===\"purple\"?\"üü£\":\"‚ùì\",\" \"]});};export default ThemeToggle;","map":{"version":3,"names":["useContext","ThemeContext","jsxs","_jsxs","ThemeToggle","theme","toggleTheme","onClick","className","children"],"sources":["C:/Users/MOHIT JAIN/Desktop/user/Frontend/src/components/UI/ThemeToggle.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../context/ThemeContext\";\r\n\r\nconst ThemeToggle = () => {\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <button onClick={toggleTheme} className=\"theme-toggle\">\r\n      {theme === \"light\"\r\n        ? \"‚òÄÔ∏è\" // Light Mode\r\n        : theme === \"dark\"\r\n          ? \"üåô\" // Dark Mode\r\n          : theme === \"blue\"\r\n            ? \"üîµ\" // Blue Mode\r\n            : theme === \"green\"\r\n              ? \"üü¢\" // Green Mode\r\n              : theme === \"purple\"\r\n                ? \"üü£\"\r\n                : \"‚ùì\"} {/* Default value to avoid syntax error */}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,YAAY,KAAQ,4BAA4B,CAAC,OAAAC,IAAA,IAAAC,KAAA,yBAE1D,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAEC,KAAK,CAAEC,WAAY,CAAC,CAAGN,UAAU,CAACC,YAAY,CAAC,CAEvD,mBACEE,KAAA,WAAQI,OAAO,CAAED,WAAY,CAACE,SAAS,CAAC,cAAc,CAAAC,QAAA,EACnDJ,KAAK,GAAK,OAAO,CACd,IAAK;AAAA,CACLA,KAAK,GAAK,MAAM,CACd,IAAK;AAAA,CACLA,KAAK,GAAK,MAAM,CACd,IAAK;AAAA,CACLA,KAAK,GAAK,OAAO,CACf,IAAK;AAAA,CACLA,KAAK,GAAK,QAAQ,CAChB,IAAI,CACJ,GAAG,CAAC,GAAC,EACX,CAAC,CAEb,CAAC,CAED,cAAe,CAAAD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}