{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:3006/api/auth\"; // Update with your backend URL\n\n// Login Function\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      email,\n      password\n    });\n    return response.data; // { token, user }\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      message: \"Login failed\"\n    };\n  }\n};\n\n// Register Function\nexport const register = async (name, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, {\n      name,\n      email,\n      password\n    });\n    return response.data; // { message: \"User registered successfully\" }\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: \"Registration failed\"\n    };\n  }\n};","map":{"version":3,"names":["axios","API_URL","login","email","password","response","post","data","error","_error$response","message","register","name","_error$response2"],"sources":["C:/Users/MOHIT JAIN/Desktop/Act Aware/Frontend/src/services/authService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:3006/api/auth\"; // Update with your backend URL\r\n\r\n// Login Function\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, { email, password });\r\n    return response.data; // { token, user }\r\n  } catch (error) {\r\n    throw error.response?.data || { message: \"Login failed\" };\r\n  }\r\n};\r\n\r\n// Register Function\r\nexport const register = async (name, email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/register`, { name, email, password });\r\n    return response.data; // { message: \"User registered successfully\" }\r\n  } catch (error) {\r\n    throw error.response?.data || { message: \"Registration failed\" };\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC,CAAC,CAAC;;AAElD;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAE;MAAEE,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC1E,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI;MAAEG,OAAO,EAAE;IAAe,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAET,KAAK,EAAEC,QAAQ,KAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,WAAW,EAAE;MAAEW,IAAI;MAAET,KAAK;MAAEC;IAAS,CAAC,CAAC;IACnF,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAK,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAL,KAAK,CAACH,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBN,IAAI,KAAI;MAAEG,OAAO,EAAE;IAAsB,CAAC;EAClE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}