{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOHIT JAIN\\\\Desktop\\\\user\\\\Frontend\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\n// Manages dark/light mode settings\n// src/context/ThemeContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\");\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n    document.body.setAttribute(\"data-theme\", theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"Vu9F2wpR0BoGpAqLYPnUEv9Hug4=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","localStorage","getItem","setItem","document","body","setAttribute","toggleTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MOHIT JAIN/Desktop/user/Frontend/src/context/ThemeContext.js"],"sourcesContent":["// Manages dark/light mode settings\r\n// src/context/ThemeContext.js\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", theme);\r\n    document.body.setAttribute(\"data-theme\", theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;EAE5EV,SAAS,CAAC,MAAM;IACdS,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACpCK,QAAQ,CAACC,IAAI,CAACC,YAAY,CAAC,YAAY,EAAEP,KAAK,CAAC;EACjD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBP,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,oBACEL,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,KAAK;MAAEQ;IAAY,CAAE;IAAAV,QAAA,EAClDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACf,EAAA,CAjBWF,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}